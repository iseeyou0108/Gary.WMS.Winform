<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddDialogTitle1" xml:space="preserve">
    <value>新增部門/單位設定</value>
  </data>
  <data name="AddDialogTitle2" xml:space="preserve">
    <value>新增角色權限設定</value>
  </data>
  <data name="AddLog" xml:space="preserve">
    <value>新增使用者資料-使用者帳號:{0}({1})</value>
  </data>
  <data name="AddLog1" xml:space="preserve">
    <value>新增部門/單位資料-部門/單位代號:{0}({1})</value>
  </data>
  <data name="AddLog2" xml:space="preserve">
    <value>新增角色權限資料-角色代號:{0}({1})</value>
  </data>
  <data name="AddMsgTitle" xml:space="preserve">
    <value>確定要新增使用者資料嗎?</value>
  </data>
  <data name="AddMsgTitle1" xml:space="preserve">
    <value>確定要新增部門/單位權限資料嗎?</value>
  </data>
  <data name="AddMsgTitle2" xml:space="preserve">
    <value>確定要新增角色權限資料嗎?</value>
  </data>
  <data name="AddSaveOk" xml:space="preserve">
    <value>新增使用者資料設定成功</value>
  </data>
  <data name="AddSaveOk1" xml:space="preserve">
    <value>新增部門/單位資料設定成功</value>
  </data>
  <data name="AddSaveOk2" xml:space="preserve">
    <value>新增角色權限設定成功</value>
  </data>
  <data name="DeleteRoleLog" xml:space="preserve">
    <value>刪除角色:{0}資料</value>
  </data>
  <data name="DeleteRoleOk" xml:space="preserve">
    <value>刪除角色:{0}資料成功</value>
  </data>
  <data name="DeleteUnitLog" xml:space="preserve">
    <value>刪除部門/單位:{0}資料</value>
  </data>
  <data name="DeleteUnitOk" xml:space="preserve">
    <value>刪除部門/單位:{0}資料成功</value>
  </data>
  <data name="EditDialogTitle1" xml:space="preserve">
    <value>修改部門/單位設定</value>
  </data>
  <data name="EditDialogTitle2" xml:space="preserve">
    <value>修改角色權限設定</value>
  </data>
  <data name="EditLog" xml:space="preserve">
    <value>修改使用者資料-使用者帳號:{0}({1})</value>
  </data>
  <data name="EditLog1" xml:space="preserve">
    <value>修改部門/單位資料-部門/單位代號:{0}({1})</value>
  </data>
  <data name="EditLog2" xml:space="preserve">
    <value>修改角色權限資料-角色代號:{0}({1})</value>
  </data>
  <data name="EditMsgTitle" xml:space="preserve">
    <value>確定要修改使用者資料嗎?</value>
  </data>
  <data name="EditMsgTitle1" xml:space="preserve">
    <value>確定要修改部門/單位資料嗎?</value>
  </data>
  <data name="EditMsgTitle2" xml:space="preserve">
    <value>確定要修改角色權限資料嗎?</value>
  </data>
  <data name="EditSaveOk" xml:space="preserve">
    <value>修改使用者資料設定成功</value>
  </data>
  <data name="EditSaveOk1" xml:space="preserve">
    <value>修改部門/單位資料設定成功</value>
  </data>
  <data name="EditSaveOk2" xml:space="preserve">
    <value>修改角色權限設定成功</value>
  </data>
  <data name="MsgTitle" xml:space="preserve">
    <value>訊息</value>
  </data>
  <data name="Notnull" xml:space="preserve">
    <value>必要欄位，不可為空值</value>
  </data>
</root>